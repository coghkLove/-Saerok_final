<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="approval">

   <resultMap id="approvalMap" type="approval">
      <id column="APPSEQ" property="appSeq" />
      <result column="APPWRITEDATE" property="appWriteDate" />
      <result column="APPCHECK" property="appCheck" />
      <result column="APPKINDS" property="appKinds" />

      <result column="APPSEQ" property="appSeq" jdbcType="INTEGER" />
      <result column="LETTERSEQ" property="letterSeq" />
      <result column="LETTERTITLE" property="letterTitle" />
      <result column="LETTERDETAIL" property="letterDetail" />
      <result column="LETTERSTATUS" property="letterStatus" />
      <result column="ORIFILENAME" property="oriFileName" />
      <result column="REFILENAME" property="reFileName" />

      <result column="app_emp_name" property="appEmpName" />
      <result column="empNos" property="empNos" />
     <result column="dept_name" property="deptName"/>
     <result column="job_name" property="jobName"/>
      <!-- Employee 매핑 -->
     <!--  <association property="empNo" resultMap="emp.empMap" /> -->
      <!-- ApvWriter 매핑 -->
      <collection property="apvWriter" ofType="apvWriter">
         <result column="APV_STATE" property="apvState" />
         <result column="APV_EMP_TIME" property="apvEmpTime" />
         <result column="RETURN_REASON" property="returnReason" />
         <result column="APV_EMP_NO" property="apvEmpNo" />
         <result column="APV_EMP_NAME" property="apvEmpName" />
         <result column="WRITERLIST" property="writerList" />
      </collection>
      <!-- ApvRef 매핑 -->
      <collection property="apvRef" ofType="apvRef">
         <result column="appSeq" property="appSeq" />
         <result column="REF_EMP_NO" property="empNo" />
      </collection>
   </resultMap>




   <!--전체 결재리스트 불러오기  -->
   <select id="selectApproval" resultMap="approvalMap">
      SELECT t1.APPSEQ AS APPSEQ
          , t1.APPWRITEDATE
          , t1.APPCHECK
          , t1.APPKINDS
          , t2.LETTERSTATUS
          , t1.emp_no AS app_emp_no
          , (SELECT emp_name FROM EMPLOYEE e WHERE
                e.emp_no = t1.emp_no) AS
                app_emp_name
          , t3.emp_no AS apv_emp_no
          , (SELECT
             emp_name FROM EMPLOYEE e WHERE e.emp_no = t3.emp_no) AS
             apv_emp_name
         , t2.LETTERTITLE
      FROM APPROVAL t1
       , APPLETTER t2
       , APV_WRITER t3
    WHERE t1.APPSEQ = t2.APPSEQ 
      AND t1.APPSEQ = t3.APPSEQ 
   </select>

   <!--결재자들 선택 추가 -->
   <select id="selectEmployeeByDeptName" resultMap="emp.empMap"
      parameterType="_int">
      SELECT *
      FROM EMPLOYEE
      JOIN DEPARTMENT USING(dept_code)
      JOIN ATO_JOB USING(job_code)
      WHERE DEPT_CODE=#{deptCode}
      ORDER BY
      JOB_CODE ASC
   </select>



   <!-- INSERT INTO APPLETTER ar(LETTERSEQ, APPSEQ, LETTERTITLE,
      LETTERDETAIL,LETTERSTATUS,ORIFILENAME,REFILENAME)
      SELECT APPROVAL.APPWRITEDATE
      FROM APPROVAL al
      WHERE ar.APPSEQ = al.APPSEQ -->


   <insert id="insertAppLetter" parameterType="appLetter">
      <selectKey keyProperty="appSeq" order="BEFORE"
         resultType="_int"> SELECT app_seq.CURRVAL from dual </selectKey>
      INSERT INTO APPLETTER(
      LETTERSEQ, APPSEQ, LETTERTITLE,
      LETTERDETAIL,LETTERSTATUS,ORIFILENAME,REFILENAME)
      VALUES(
      'Letter_'||TO_CHAR(LETTERSEQ.NEXTVAL),
      #{appSeq},#{letterTitle},
      #{letterDetail},default,
      #{oriFileName},#{reFileName})
   </insert>

   <insert id="insertAppr" parameterType="appLetter">
      INSERT INTO APPROVAL(APPSEQ,APPWRITEDATE,APPCHECK,EMP_NO,APPKINDS)
      VALUES(   APP_SEQ.NEXTVAL,SYSDATE, DEFAULT,#{loginEmp},#{basicForm} )
   </insert>


   <!--결재선 라인 -->
   <insert id="insertApprovalLine" parameterType="java.util.Map">
         <selectKey keyProperty="appSeq" order="BEFORE"
         resultType="_int"> SELECT app_seq.CURRVAL from dual </selectKey>
      INSERT INTO APV_WRITER(
         APPSEQ, EMP_NO,WRITERLIST)
      VALUES(#{appSeq},#{empNo},#{order})
   </insert>
   
   <!--내문서 결재리스트 불러오기  -->
   <select id="myApproval" parameterType="String" resultMap="approvalMap">
      SELECT t1.APPSEQ AS APPSEQ
          , t1.APPWRITEDATE
          , t1.APPCHECK
          , t1.APPKINDS
          , t2.LETTERSTATUS
          , t1.emp_no AS app_emp_no
          , (SELECT emp_name FROM EMPLOYEE e WHERE
                e.emp_no = t1.emp_no) AS
                app_emp_name
          , t3.emp_no AS apv_emp_no
          , (SELECT
             emp_name FROM EMPLOYEE e WHERE e.emp_no = t3.emp_no) AS
             apv_emp_name
         , t2.LETTERTITLE
      FROM APPROVAL t1
       , APPLETTER t2
       , APV_WRITER t3
    WHERE t1.APPSEQ = t2.APPSEQ 
      AND t1.APPSEQ = t3.APPSEQ 
      AND t1.EMP_NO = #{empNo}
      
     
   </select>
   <!--결재해야할 문서  -->
    <select id="myTodoApprovalList" parameterType="String" resultMap="approvalMap">
      SELECT t1.APPSEQ AS APPSEQ
          , t1.APPWRITEDATE
          , t1.APPCHECK
          , t1.APPKINDS
          , t2.LETTERSTATUS
          , t1.emp_no AS app_emp_no
          , (SELECT emp_name FROM EMPLOYEE e WHERE
                e.emp_no = t1.emp_no) AS
                app_emp_name
          , t3.emp_no AS APV_EMP_NO
          , (SELECT
             emp_name FROM EMPLOYEE e WHERE e.emp_no = t3.emp_no) AS
             apv_emp_name
         , t2.LETTERTITLE
      FROM APPROVAL t1
       , APPLETTER t2
       , APV_WRITER t3
    WHERE t1.APPSEQ = t2.APPSEQ 
      AND t1.APPSEQ = t3.APPSEQ 
      AND EXISTS (
            SELECT 1
              FROM APV_WRITER aw 
             WHERE aw.APPSEQ = t3.APPSEQ 
               AND aw.emp_no = #{empNo}
      )
      ORDER BY t1.APPWRITEDATE DESC
       <!--  SELECT appseq
       , (SELECT max(APPWRITEDATE) FROM APPROVAL a2 WHERE a2.appseq = t1.appseq) as APPWRITEDATE
       , (SELECT max(APPCHECK) FROM APPROVAL a2 WHERE a2.appseq = t1.appseq) as APPCHECK
       , (SELECT max(APPKINDS) FROM APPROVAL a2 WHERE a2.appseq = t1.appseq) as APPKINDS
       , (SELECT max(LETTERSTATUS) FROM APPLETTER a2 WHERE a2.appseq = t1.appseq) as LETTERSTATUS
       , (SELECT max(emp_no) FROM APPROVAL a2 WHERE a2.appseq = t1.appseq) as empNo
       , (SELECT max(LETTERTITLE) FROM APPLETTER a2 WHERE a2.appseq = t1.appseq) as LETTERTITLE
        , (LISTAGG(t1.emp_no, ',') WITHIN GROUP(ORDER BY t1.emp_no)) as empNos
     FROM APV_WRITER t1
    WHERE t1.APPSEQ IN (SELECT a.appseq FROM APPROVAL a WHERE a.emp_no = #{empNo})
    GROUP BY t1.appseq -->
   </select>
   
   <!--상세페이지  -->
   <select id="approvalDetailView" parameterType="string" resultMap="approvalMap">
     SELECT
        t1.APPSEQ AS APPSEQ,
        t1.APPWRITEDATE,
        t1.APPCHECK,
        t1.APPKINDS,
        t2.LETTERSTATUS,
        t1.emp_no AS app_emp_no,
        (SELECT emp_name FROM EMPLOYEE e WHERE e.emp_no = t1.emp_no) AS app_emp_name,
        t3.emp_no AS apv_emp_no,
        (SELECT emp_name FROM EMPLOYEE e WHERE e.emp_no = t3.emp_no) AS apv_emp_name,
        t2.LETTERTITLE,
        t2.LETTERDETAIL,
        t2.ORIFILENAME,
        t3.WRITERLIST,
        d.DEPT_NAME,
        aj.JOB_NAME,
        t3.APV_STATE
    FROM
        APPROVAL t1
        JOIN APV_WRITER t3 ON t1.APPSEQ = t3.APPSEQ
        JOIN APPLETTER t2 ON t1.APPSEQ = t2.APPSEQ
      JOIN EMPLOYEE E ON t1.emp_no=e.emp_no
        JOIN DEPARTMENT d ON E.DEPT_CODE =d.DEPT_CODE 
        JOIN ATO_JOB aj ON E.JOB_CODE =aj.JOB_CODE 
    WHERE
        t1.APPSEQ = #{appSeq}
   </select>
   
  <!-- 승인 또는 반려 업데이트 쿼리 -->
   <update id="updateApprovalStatus" parameterType="map">
       UPDATE APV_WRITER
       SET APV_STATE =
           <choose>
               <when test="apvState == '승인'">
                   '300'
               </when>
               <when test="apvState == '반려'">
                   '200'
               </when>
           </choose>,
       APV_EMP_TIME =
           <choose>
               <when test="apvState == '승인'">
                   SYSDATE
               </when>
               <otherwise>
                   null
               </otherwise>
           </choose>,
       RETURN_TIME =
           <choose>
               <when test="apvState == '반려'">
                   SYSDATE
               </when>
               <otherwise>
                   null
               </otherwise>
           </choose>,
       RETURN_REASON =
           <choose>
               <when test="apvState == '반려'">
                   #{returnReason}
               </when>
               <otherwise>
                   null
               </otherwise>
           </choose>
       WHERE APPSEQ = #{appSeq} AND EMP_NO = #{empNo}
       <selectKey keyProperty="writerList" resultType="string" order="AFTER">
          SELECT WRITERLIST FROM APV_WRITER WHERE APPSEQ = #{appSeq} AND EMP_NO = #{empNo}
       </selectKey>
   </update>

   <!--결재 최종완료 문서  -->
   <update id="updateApproval" parameterType="map">
      UPDATE APPROVAL SET APPCHECK='결재완료' WHERE APPSEQ = #{appSeq}
   </update>
</mapper>